[
  {
    "path": "posts/2021-06-09-gganimate-para-a-carol/",
    "title": "Gganimate para a Carol",
    "description": "Exemplo de um gganimate para a Carol.",
    "author": [
      {
        "name": "Athos Petri Damiani",
        "url": "https://github.com/athospd"
      }
    ],
    "date": "2021-09-06",
    "categories": [],
    "contents": "\r\n\r\nContents\r\ndados fake\r\nggplot e gganimate\r\nsalvar\r\n\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(gganimate)\r\n\r\n\r\n\r\ndados fake\r\n\r\n\r\nShow code\r\n\r\n# base fake ----------------------------------\r\nbase <- bind_rows(\r\n  beaver1 %>% mutate(ocorrencia = \"novas internações\", day = if_else(day == 346, 307, 308)),\r\n  beaver2 %>% mutate(ocorrencia = \"novas mortes\")\r\n) %>%\r\n  filter(day == 307) %>%\r\n  mutate(\r\n    data = as.Date(time, origin = \"2015-01-01\"),\r\n    ocorrencia = factor(ocorrencia)\r\n  ) %>%\r\n  dplyr::select(\r\n    data, ocorrencia, total_por_dia = temp\r\n  )\r\n\r\nversao_da_base_10_05 <- base %>% mutate(versao_da_base = \"Versão da base: 10/05\", total_por_dia = ifelse(data > \"2021-01-01\", total_por_dia * 1, total_por_dia))\r\nversao_da_base_17_05 <- base %>% mutate(versao_da_base = \"Versão da base: 17/05\", total_por_dia = ifelse(data > \"2021-01-01\", total_por_dia * 1.01, total_por_dia))\r\nversao_da_base_24_05 <- base %>% mutate(versao_da_base = \"Versão da base: 24/05\", total_por_dia = ifelse(data > \"2021-01-01\", total_por_dia * 1.03, total_por_dia))\r\nversao_da_base_31_05 <- base %>% mutate(versao_da_base = \"Versão da base: 31/05\", total_por_dia = ifelse(data > \"2021-01-01\", total_por_dia * 1.06, total_por_dia))\r\n\r\nbase_com_todas_as_versoes <- bind_rows(\r\n  versao_da_base_10_05,\r\n  versao_da_base_17_05,\r\n  versao_da_base_24_05,\r\n  versao_da_base_31_05\r\n)\r\n\r\n\r\n\r\n\r\n\r\nglimpse(base_com_todas_as_versoes)\r\n\r\n\r\nRows: 712\r\nColumns: 4\r\n$ data           <date> 2017-04-20, 2017-04-30, 2017-06-19, 2017-06-~\r\n$ ocorrencia     <fct> novas internações, novas internações, novas i~\r\n$ total_por_dia  <dbl> 36.33, 36.34, 36.35, 36.42, 36.55, 36.69, 36.~\r\n$ versao_da_base <chr> \"Versão da base: 10/05\", \"Versão da base: 10/~\r\n\r\nggplot e gganimate\r\n\r\n\r\n# grafico ------------------------------------\r\ngif <- base_com_todas_as_versoes %>%\r\n  ggplot() +\r\n  geom_line(aes(x = data, y = total_por_dia, colour = ocorrencia), size = 2) +\r\n  geom_text(aes(label = versao_da_base), x = as.Date(\"2020-01-01\"), y = 40, size = 6) +\r\n  geom_vline(\r\n    colour = \"gray80\", \r\n    size = 1, \r\n    xintercept = max(base_com_todas_as_versoes$data)\r\n  ) +\r\n  geom_text(\r\n    colour = \"gray50\", \r\n    size = 4, \r\n    fontface = \"bold\",\r\n    x = max(base_com_todas_as_versoes$data), \r\n    y = min(base_com_todas_as_versoes$total_por_dia), \r\n    hjust = -0.05, \r\n    label = format(max(base_com_todas_as_versoes$data), \"%d/%m\")\r\n  ) +\r\n  theme_minimal(15) +\r\n  labs(\r\n    x = \"data\", \r\n    y = \"Total por dia\", \r\n    colour = NULL, \r\n    title = \"Internações por SRAG e mortes confirmadas por Covid-19\",\r\n    subtitle = \"Média móvel por data de ocorrência do Estado de SP\",\r\n    caption = \"Fonte: Sivep-Gripe (Ministério da Saúde)\"\r\n  ) +\r\n  scale_x_date(date_labels = \"%b %Y\") +\r\n  theme(\r\n    legend.position = \"top\"\r\n  ) +\r\n  transition_states(versao_da_base, transition_length = 2, wrap = TRUE, state_length = 2)\r\n\r\n\r\nanimate(gif, width = 650, height = 480)\r\n\r\n\r\n\r\n\r\nsalvar\r\n\r\n\r\ngganimate::save_animation(gganimate::last_animation(), file = \"sivep_gripe.gif\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-06-09-gganimate-para-a-carol/image/thumbnail.png",
    "last_modified": "2021-06-09T02:10:13-03:00",
    "input_file": "gganimate-para-a-carol.utf8.md"
  },
  {
    "path": "posts/2021-08-16-exemplo_de_post_poliglota/",
    "title": "Exemplo de Post Poliglota (R Py SQL)",
    "description": "Um Notebook feito em RMarkdown que tem R, Python e SQL trabalhando juntos.",
    "author": [
      {
        "name": "Athos Dmiani",
        "url": "https://github.com/Athospd/rascunhos/tree/master/_posts/2021-08-16-exemplo_de_post_poliglota/exemplo_de_post_poliglota.html"
      }
    ],
    "date": "2021-08-16",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nSetup do Python\r\nCódigo no R\r\nCódigo no Python\r\nDe volta pro R\r\nCódigo em SQL\r\nColocando uma tabelinha no SQLite\r\n\r\nSQL\r\nMiscelânea do Rmarkdown\r\n\r\nSetup do Python\r\nreticulate é o pacote responsável pela comunicação entre R e Python.\r\nconda_create(\"athos\") cria um novo ambiente de python usando a distribuição conda. Use virtualenv_create()virtualenv_create()` para criar um virtual env padrão (sem usar o conda).\r\nuse_condaenv(\"athos\", required = TRUE) define o ambiente python que vai ser usado.\r\nconda_install(\"athos\", \"pandas\") instala o pandas no ambiente escolhido (no caso, no ambiente ‘athos’).\r\n\r\n\r\nlibrary(reticulate)\r\n# conda_create(\"athos\")\r\nuse_condaenv(\"athos\", required = TRUE)\r\n# py_config()\r\n# conda_install(\"athos\", \"pandas\")\r\n# conda_install(\"athos\", \"numpy\")\r\n\r\n\r\n\r\nCódigo no R\r\n\r\n\r\nlibrary(rmarkdown)\r\nlibrary(tidyverse)\r\npaged_table(mtcars)\r\n\r\n\r\n\r\n\r\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"mpg\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cyl\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"disp\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"hp\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"drat\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"wt\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"qsec\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"vs\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"am\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gear\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"carb\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"21.0\",\"2\":\"6\",\"3\":\"160.0\",\"4\":\"110\",\"5\":\"3.90\",\"6\":\"2.620\",\"7\":\"16.46\",\"8\":\"0\",\"9\":\"1\",\"10\":\"4\",\"11\":\"4\",\"_rn_\":\"Mazda RX4\"},{\"1\":\"21.0\",\"2\":\"6\",\"3\":\"160.0\",\"4\":\"110\",\"5\":\"3.90\",\"6\":\"2.875\",\"7\":\"17.02\",\"8\":\"0\",\"9\":\"1\",\"10\":\"4\",\"11\":\"4\",\"_rn_\":\"Mazda RX4 Wag\"},{\"1\":\"22.8\",\"2\":\"4\",\"3\":\"108.0\",\"4\":\"93\",\"5\":\"3.85\",\"6\":\"2.320\",\"7\":\"18.61\",\"8\":\"1\",\"9\":\"1\",\"10\":\"4\",\"11\":\"1\",\"_rn_\":\"Datsun 710\"},{\"1\":\"21.4\",\"2\":\"6\",\"3\":\"258.0\",\"4\":\"110\",\"5\":\"3.08\",\"6\":\"3.215\",\"7\":\"19.44\",\"8\":\"1\",\"9\":\"0\",\"10\":\"3\",\"11\":\"1\",\"_rn_\":\"Hornet 4 Drive\"},{\"1\":\"18.7\",\"2\":\"8\",\"3\":\"360.0\",\"4\":\"175\",\"5\":\"3.15\",\"6\":\"3.440\",\"7\":\"17.02\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"2\",\"_rn_\":\"Hornet Sportabout\"},{\"1\":\"18.1\",\"2\":\"6\",\"3\":\"225.0\",\"4\":\"105\",\"5\":\"2.76\",\"6\":\"3.460\",\"7\":\"20.22\",\"8\":\"1\",\"9\":\"0\",\"10\":\"3\",\"11\":\"1\",\"_rn_\":\"Valiant\"},{\"1\":\"14.3\",\"2\":\"8\",\"3\":\"360.0\",\"4\":\"245\",\"5\":\"3.21\",\"6\":\"3.570\",\"7\":\"15.84\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"4\",\"_rn_\":\"Duster 360\"},{\"1\":\"24.4\",\"2\":\"4\",\"3\":\"146.7\",\"4\":\"62\",\"5\":\"3.69\",\"6\":\"3.190\",\"7\":\"20.00\",\"8\":\"1\",\"9\":\"0\",\"10\":\"4\",\"11\":\"2\",\"_rn_\":\"Merc 240D\"},{\"1\":\"22.8\",\"2\":\"4\",\"3\":\"140.8\",\"4\":\"95\",\"5\":\"3.92\",\"6\":\"3.150\",\"7\":\"22.90\",\"8\":\"1\",\"9\":\"0\",\"10\":\"4\",\"11\":\"2\",\"_rn_\":\"Merc 230\"},{\"1\":\"19.2\",\"2\":\"6\",\"3\":\"167.6\",\"4\":\"123\",\"5\":\"3.92\",\"6\":\"3.440\",\"7\":\"18.30\",\"8\":\"1\",\"9\":\"0\",\"10\":\"4\",\"11\":\"4\",\"_rn_\":\"Merc 280\"},{\"1\":\"17.8\",\"2\":\"6\",\"3\":\"167.6\",\"4\":\"123\",\"5\":\"3.92\",\"6\":\"3.440\",\"7\":\"18.90\",\"8\":\"1\",\"9\":\"0\",\"10\":\"4\",\"11\":\"4\",\"_rn_\":\"Merc 280C\"},{\"1\":\"16.4\",\"2\":\"8\",\"3\":\"275.8\",\"4\":\"180\",\"5\":\"3.07\",\"6\":\"4.070\",\"7\":\"17.40\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"3\",\"_rn_\":\"Merc 450SE\"},{\"1\":\"17.3\",\"2\":\"8\",\"3\":\"275.8\",\"4\":\"180\",\"5\":\"3.07\",\"6\":\"3.730\",\"7\":\"17.60\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"3\",\"_rn_\":\"Merc 450SL\"},{\"1\":\"15.2\",\"2\":\"8\",\"3\":\"275.8\",\"4\":\"180\",\"5\":\"3.07\",\"6\":\"3.780\",\"7\":\"18.00\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"3\",\"_rn_\":\"Merc 450SLC\"},{\"1\":\"10.4\",\"2\":\"8\",\"3\":\"472.0\",\"4\":\"205\",\"5\":\"2.93\",\"6\":\"5.250\",\"7\":\"17.98\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"4\",\"_rn_\":\"Cadillac Fleetwood\"},{\"1\":\"10.4\",\"2\":\"8\",\"3\":\"460.0\",\"4\":\"215\",\"5\":\"3.00\",\"6\":\"5.424\",\"7\":\"17.82\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"4\",\"_rn_\":\"Lincoln Continental\"},{\"1\":\"14.7\",\"2\":\"8\",\"3\":\"440.0\",\"4\":\"230\",\"5\":\"3.23\",\"6\":\"5.345\",\"7\":\"17.42\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"4\",\"_rn_\":\"Chrysler Imperial\"},{\"1\":\"32.4\",\"2\":\"4\",\"3\":\"78.7\",\"4\":\"66\",\"5\":\"4.08\",\"6\":\"2.200\",\"7\":\"19.47\",\"8\":\"1\",\"9\":\"1\",\"10\":\"4\",\"11\":\"1\",\"_rn_\":\"Fiat 128\"},{\"1\":\"30.4\",\"2\":\"4\",\"3\":\"75.7\",\"4\":\"52\",\"5\":\"4.93\",\"6\":\"1.615\",\"7\":\"18.52\",\"8\":\"1\",\"9\":\"1\",\"10\":\"4\",\"11\":\"2\",\"_rn_\":\"Honda Civic\"},{\"1\":\"33.9\",\"2\":\"4\",\"3\":\"71.1\",\"4\":\"65\",\"5\":\"4.22\",\"6\":\"1.835\",\"7\":\"19.90\",\"8\":\"1\",\"9\":\"1\",\"10\":\"4\",\"11\":\"1\",\"_rn_\":\"Toyota Corolla\"},{\"1\":\"21.5\",\"2\":\"4\",\"3\":\"120.1\",\"4\":\"97\",\"5\":\"3.70\",\"6\":\"2.465\",\"7\":\"20.01\",\"8\":\"1\",\"9\":\"0\",\"10\":\"3\",\"11\":\"1\",\"_rn_\":\"Toyota Corona\"},{\"1\":\"15.5\",\"2\":\"8\",\"3\":\"318.0\",\"4\":\"150\",\"5\":\"2.76\",\"6\":\"3.520\",\"7\":\"16.87\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"2\",\"_rn_\":\"Dodge Challenger\"},{\"1\":\"15.2\",\"2\":\"8\",\"3\":\"304.0\",\"4\":\"150\",\"5\":\"3.15\",\"6\":\"3.435\",\"7\":\"17.30\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"2\",\"_rn_\":\"AMC Javelin\"},{\"1\":\"13.3\",\"2\":\"8\",\"3\":\"350.0\",\"4\":\"245\",\"5\":\"3.73\",\"6\":\"3.840\",\"7\":\"15.41\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"4\",\"_rn_\":\"Camaro Z28\"},{\"1\":\"19.2\",\"2\":\"8\",\"3\":\"400.0\",\"4\":\"175\",\"5\":\"3.08\",\"6\":\"3.845\",\"7\":\"17.05\",\"8\":\"0\",\"9\":\"0\",\"10\":\"3\",\"11\":\"2\",\"_rn_\":\"Pontiac Firebird\"},{\"1\":\"27.3\",\"2\":\"4\",\"3\":\"79.0\",\"4\":\"66\",\"5\":\"4.08\",\"6\":\"1.935\",\"7\":\"18.90\",\"8\":\"1\",\"9\":\"1\",\"10\":\"4\",\"11\":\"1\",\"_rn_\":\"Fiat X1-9\"},{\"1\":\"26.0\",\"2\":\"4\",\"3\":\"120.3\",\"4\":\"91\",\"5\":\"4.43\",\"6\":\"2.140\",\"7\":\"16.70\",\"8\":\"0\",\"9\":\"1\",\"10\":\"5\",\"11\":\"2\",\"_rn_\":\"Porsche 914-2\"},{\"1\":\"30.4\",\"2\":\"4\",\"3\":\"95.1\",\"4\":\"113\",\"5\":\"3.77\",\"6\":\"1.513\",\"7\":\"16.90\",\"8\":\"1\",\"9\":\"1\",\"10\":\"5\",\"11\":\"2\",\"_rn_\":\"Lotus Europa\"},{\"1\":\"15.8\",\"2\":\"8\",\"3\":\"351.0\",\"4\":\"264\",\"5\":\"4.22\",\"6\":\"3.170\",\"7\":\"14.50\",\"8\":\"0\",\"9\":\"1\",\"10\":\"5\",\"11\":\"4\",\"_rn_\":\"Ford Pantera L\"},{\"1\":\"19.7\",\"2\":\"6\",\"3\":\"145.0\",\"4\":\"175\",\"5\":\"3.62\",\"6\":\"2.770\",\"7\":\"15.50\",\"8\":\"0\",\"9\":\"1\",\"10\":\"5\",\"11\":\"6\",\"_rn_\":\"Ferrari Dino\"},{\"1\":\"15.0\",\"2\":\"8\",\"3\":\"301.0\",\"4\":\"335\",\"5\":\"3.54\",\"6\":\"3.570\",\"7\":\"14.60\",\"8\":\"0\",\"9\":\"1\",\"10\":\"5\",\"11\":\"8\",\"_rn_\":\"Maserati Bora\"},{\"1\":\"21.4\",\"2\":\"4\",\"3\":\"121.0\",\"4\":\"109\",\"5\":\"4.11\",\"6\":\"2.780\",\"7\":\"18.60\",\"8\":\"1\",\"9\":\"1\",\"10\":\"4\",\"11\":\"2\",\"_rn_\":\"Volvo 142E\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\r\n  \r\n\r\nCódigo no Python\r\n\r\nimport pandas as pd\r\n\r\ndescb = r.iris.describe()\r\ndescb\r\n       Sepal.Length  Sepal.Width  Petal.Length  Petal.Width\r\ncount    150.000000   150.000000    150.000000   150.000000\r\nmean       5.843333     3.057333      3.758000     1.199333\r\nstd        0.828066     0.435866      1.765298     0.762238\r\nmin        4.300000     2.000000      1.000000     0.100000\r\n25%        5.100000     2.800000      1.600000     0.300000\r\n50%        5.800000     3.000000      4.350000     1.300000\r\n75%        6.400000     3.300000      5.100000     1.800000\r\nmax        7.900000     4.400000      6.900000     2.500000\r\n\r\n\r\nobj_do_python = \"alo mãe \" + \"to no python!\"\r\nobj_do_python\r\n'alo mãe to no python!'\r\n\r\nDe volta pro R\r\n\r\n\r\npy$descb %>%\r\n  select(Sepal.Length)\r\n\r\n\r\n      Sepal.Length\r\ncount  150.0000000\r\nmean     5.8433333\r\nstd      0.8280661\r\nmin      4.3000000\r\n25%      5.1000000\r\n50%      5.8000000\r\n75%      6.4000000\r\nmax      7.9000000\r\n\r\nCódigo em SQL\r\nColocando uma tabelinha no SQLite\r\n\r\n\r\nlibrary(DBI)\r\nlibrary(dplyr)\r\ndb <- dbConnect(RSQLite::SQLite(), dbname = \"sql.sqlite\")\r\ncopy_to(db, mtcars) # coloca o mtcars no banco de dados\r\n\r\n\r\n\r\nSQL\r\nFazendo uma consulta no SQLite\r\n\r\nSELECT * FROM mtcars\r\n\r\nTable 1: Displaying records 1 - 10\r\nmpg\r\ncyl\r\ndisp\r\nhp\r\ndrat\r\nwt\r\nqsec\r\nvs\r\nam\r\ngear\r\ncarb\r\n21.0\r\n6\r\n160.0\r\n110\r\n3.90\r\n2.620\r\n16.46\r\n0\r\n1\r\n4\r\n4\r\n21.0\r\n6\r\n160.0\r\n110\r\n3.90\r\n2.875\r\n17.02\r\n0\r\n1\r\n4\r\n4\r\n22.8\r\n4\r\n108.0\r\n93\r\n3.85\r\n2.320\r\n18.61\r\n1\r\n1\r\n4\r\n1\r\n21.4\r\n6\r\n258.0\r\n110\r\n3.08\r\n3.215\r\n19.44\r\n1\r\n0\r\n3\r\n1\r\n18.7\r\n8\r\n360.0\r\n175\r\n3.15\r\n3.440\r\n17.02\r\n0\r\n0\r\n3\r\n2\r\n18.1\r\n6\r\n225.0\r\n105\r\n2.76\r\n3.460\r\n20.22\r\n1\r\n0\r\n3\r\n1\r\n14.3\r\n8\r\n360.0\r\n245\r\n3.21\r\n3.570\r\n15.84\r\n0\r\n0\r\n3\r\n4\r\n24.4\r\n4\r\n146.7\r\n62\r\n3.69\r\n3.190\r\n20.00\r\n1\r\n0\r\n4\r\n2\r\n22.8\r\n4\r\n140.8\r\n95\r\n3.92\r\n3.150\r\n22.90\r\n1\r\n0\r\n4\r\n2\r\n19.2\r\n6\r\n167.6\r\n123\r\n3.92\r\n3.440\r\n18.30\r\n1\r\n0\r\n4\r\n4\r\n\r\n\r\n\r\n\r\nlibrary(DBI)\r\nlibrary(dplyr)\r\nlibrary(dbplyr)\r\n\r\ncon <- dbConnect(RSQLite::SQLite(), dbname = \"imdb.db\")\r\ndbListTables(con)\r\n\r\n\r\n[1] \"imdb\"            \"imdb_csv\"        \"meu_imdb_okok\"  \r\n[4] \"primeiro_titulo\" \"sqlite_stat1\"    \"sqlite_stat4\"   \r\n\r\n\r\nSELECT titulo FROM imdb\r\nWHERE nota_imdb > 9\r\n\r\nTable 2: 3 records\r\ntitulo\r\nThe Shawshank Redemption\r\nThe Godfather\r\nKickboxer: Vengeance\r\n\r\n\r\n\r\nDROP TABLE IF EXISTS 'primeiro_titulo';\r\n\r\n\r\ncreate table primeiro_titulo as\r\nSELECT titulo \r\nFROM imdb \r\nlimit 1\r\n\r\n\r\n\r\n# collect() traz a tabela para a memória do computador local\r\ntbl(con, \"primeiro_titulo\") %>% collect()\r\n\r\n\r\n# A tibble: 1 x 1\r\n  titulo \r\n  <chr>  \r\n1 Avatar \r\n\r\nMiscelânea do Rmarkdown\r\nUm mapinha\r\n\r\n\r\nlibrary(leaflet)\r\nleaflet() %>%\r\n  addTiles() %>%  \r\n  addMarkers(lng=174.768, lat=-36.852, popup=\"Onde o R Nasceu\")\r\n\r\n\r\n\r\n{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"http://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]},{\"method\":\"addMarkers\",\"args\":[-36.852,174.768,null,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":false,\"riseOffset\":250},\"Onde o R Nasceu\",null,null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[-36.852,-36.852],\"lng\":[174.768,174.768]}},\"evals\":[],\"jsHooks\":[]}\r\nUm gráfico que mexe\r\n\r\n\r\nlibrary(dygraphs)\r\ndygraph(ldeaths)\r\n\r\n\r\n\r\n{\"x\":{\"attrs\":{\"labels\":[\"month\",\"V1\"],\"legend\":\"auto\",\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60}}},\"scale\":\"monthly\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"1974-01-01T00:00:00.000Z\",\"1974-02-01T00:00:00.000Z\",\"1974-03-01T00:00:00.000Z\",\"1974-04-01T00:00:00.000Z\",\"1974-05-01T00:00:00.000Z\",\"1974-06-01T00:00:00.000Z\",\"1974-07-01T00:00:00.000Z\",\"1974-08-01T00:00:00.000Z\",\"1974-09-01T00:00:00.000Z\",\"1974-10-01T00:00:00.000Z\",\"1974-11-01T00:00:00.000Z\",\"1974-12-01T00:00:00.000Z\",\"1975-01-01T00:00:00.000Z\",\"1975-02-01T00:00:00.000Z\",\"1975-03-01T00:00:00.000Z\",\"1975-04-01T00:00:00.000Z\",\"1975-05-01T00:00:00.000Z\",\"1975-06-01T00:00:00.000Z\",\"1975-07-01T00:00:00.000Z\",\"1975-08-01T00:00:00.000Z\",\"1975-09-01T00:00:00.000Z\",\"1975-10-01T00:00:00.000Z\",\"1975-11-01T00:00:00.000Z\",\"1975-12-01T00:00:00.000Z\",\"1976-01-01T00:00:00.000Z\",\"1976-02-01T00:00:00.000Z\",\"1976-03-01T00:00:00.000Z\",\"1976-04-01T00:00:00.000Z\",\"1976-05-01T00:00:00.000Z\",\"1976-06-01T00:00:00.000Z\",\"1976-07-01T00:00:00.000Z\",\"1976-08-01T00:00:00.000Z\",\"1976-09-01T00:00:00.000Z\",\"1976-10-01T00:00:00.000Z\",\"1976-11-01T00:00:00.000Z\",\"1976-12-01T00:00:00.000Z\",\"1977-01-01T00:00:00.000Z\",\"1977-02-01T00:00:00.000Z\",\"1977-03-01T00:00:00.000Z\",\"1977-04-01T00:00:00.000Z\",\"1977-05-01T00:00:00.000Z\",\"1977-06-01T00:00:00.000Z\",\"1977-07-01T00:00:00.000Z\",\"1977-08-01T00:00:00.000Z\",\"1977-09-01T00:00:00.000Z\",\"1977-10-01T00:00:00.000Z\",\"1977-11-01T00:00:00.000Z\",\"1977-12-01T00:00:00.000Z\",\"1978-01-01T00:00:00.000Z\",\"1978-02-01T00:00:00.000Z\",\"1978-03-01T00:00:00.000Z\",\"1978-04-01T00:00:00.000Z\",\"1978-05-01T00:00:00.000Z\",\"1978-06-01T00:00:00.000Z\",\"1978-07-01T00:00:00.000Z\",\"1978-08-01T00:00:00.000Z\",\"1978-09-01T00:00:00.000Z\",\"1978-10-01T00:00:00.000Z\",\"1978-11-01T00:00:00.000Z\",\"1978-12-01T00:00:00.000Z\",\"1979-01-01T00:00:00.000Z\",\"1979-02-01T00:00:00.000Z\",\"1979-03-01T00:00:00.000Z\",\"1979-04-01T00:00:00.000Z\",\"1979-05-01T00:00:00.000Z\",\"1979-06-01T00:00:00.000Z\",\"1979-07-01T00:00:00.000Z\",\"1979-08-01T00:00:00.000Z\",\"1979-09-01T00:00:00.000Z\",\"1979-10-01T00:00:00.000Z\",\"1979-11-01T00:00:00.000Z\",\"1979-12-01T00:00:00.000Z\"],[3035,2552,2704,2554,2014,1655,1721,1524,1596,2074,2199,2512,2933,2889,2938,2497,1870,1726,1607,1545,1396,1787,2076,2837,2787,3891,3179,2011,1636,1580,1489,1300,1356,1653,2013,2823,3102,2294,2385,2444,1748,1554,1498,1361,1346,1564,1640,2293,2815,3137,2679,1969,1870,1633,1529,1366,1357,1570,1535,2491,3084,2605,2573,2143,1693,1504,1461,1354,1333,1492,1781,1915]]},\"evals\":[],\"jsHooks\":[]}\r\nUm plotly\r\n\r\n\r\nlibrary(plotly)\r\nplot_ly(z = ~volcano) %>% \r\n  add_surface()  \r\n\r\n\r\n\r\n{\"x\":{\"visdat\":{\"4dcc7d912abf\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"4dcc7d912abf\",\"attrs\":{\"4dcc7d912abf\":{\"z\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"surface\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"zaxis\":{\"title\":\"volcano\"}},\"hovermode\":\"closest\",\"showlegend\":false,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"showSendToCloud\":false},\"data\":[{\"colorbar\":{\"title\":\"volcano\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666666\",\"rgba(70,19,97,1)\"],[\"0.0833333333333334\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666666\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333333\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333333\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333333\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":true,\"z\":[[100,100,101,101,101,101,101,100,100,100,101,101,102,102,102,102,103,104,103,102,101,101,102,103,104,104,105,107,107,107,108,108,110,110,110,110,110,110,110,110,108,108,108,107,107,108,108,108,108,108,107,107,107,107,106,106,105,105,104,104,103],[101,101,102,102,102,102,102,101,101,101,102,102,103,103,103,103,104,105,104,103,102,102,103,105,106,106,107,109,110,110,110,110,111,112,113,114,116,115,114,112,110,110,110,109,108,109,109,109,109,108,108,108,108,107,107,106,106,105,105,104,104],[102,102,103,103,103,103,103,102,102,102,103,103,104,104,104,104,105,106,105,104,104,105,106,107,108,110,111,113,114,115,114,115,116,118,119,119,121,121,120,118,116,114,112,111,110,110,110,110,109,109,109,109,108,108,107,107,106,106,105,105,104],[103,103,104,104,104,104,104,103,103,103,103,104,104,104,105,105,106,107,106,106,106,107,108,110,111,114,117,118,117,119,120,121,122,124,125,126,127,127,126,124,122,120,117,116,113,111,110,110,110,109,109,109,109,108,108,107,107,106,106,105,105],[104,104,105,105,105,105,105,104,104,103,104,104,105,105,105,106,107,108,108,108,109,110,112,114,115,118,121,122,121,123,128,131,129,130,131,131,132,132,131,130,128,126,122,119,115,114,112,110,110,110,110,110,109,109,108,107,107,107,106,106,105],[105,105,105,106,106,106,106,105,105,104,104,105,105,106,106,107,109,110,110,112,113,115,116,118,119,121,124,126,126,129,134,137,137,136,136,135,136,136,136,135,133,129,126,122,118,116,115,113,111,110,110,110,110,109,108,108,108,107,107,106,106],[105,106,106,107,107,107,107,106,106,105,105,106,106,107,108,109,111,113,114,116,118,120,121,122,123,125,127,129,130,135,140,142,142,142,141,140,140,140,140,139,137,134,129,125,121,118,116,114,112,110,110,110,111,110,109,109,108,108,107,107,106],[106,107,107,108,108,108,108,107,107,106,106,107,108,108,110,113,115,117,118,120,122,124,125,127,128,129,131,134,135,141,146,147,146,146,145,144,144,144,143,142,141,139,135,130,126,122,118,116,114,112,112,113,112,110,110,109,109,108,108,107,106],[107,108,108,109,109,109,109,108,108,107,108,108,110,111,113,116,118,120,123,125,127,129,130,132,134,135,137,139,142,146,152,152,151,151,150,149,148,148,146,145,143,142,139,135,131,127,122,119,117,115,115,115,114,112,110,110,109,109,108,107,107],[108,109,109,110,110,110,110,109,109,108,110,110,113,116,118,120,122,125,127,129,133,136,138,140,141,142,148,150,151,156,158,159,158,157,158,158,154,151,149,148,146,144,141,137,134,130,125,122,120,118,117,117,115,113,111,110,110,109,108,107,107],[109,110,110,111,111,111,111,110,110,110,112,114,118,121,123,125,127,129,133,137,141,143,145,146,148,150,154,156,159,161,162,163,164,163,164,164,160,157,154,151,149,146,144,140,137,133,129,126,124,121,119,118,116,114,112,111,110,109,108,107,106],[110,110,111,113,112,111,113,112,112,114,116,119,121,124,127,129,133,138,143,146,149,149,151,153,154,157,159,160,163,165,166,167,168,168,168,168,166,162,159,157,154,152,149,144,140,136,133,131,128,125,122,119,117,115,113,111,110,109,108,107,106],[110,111,113,115,114,113,114,114,115,117,119,121,124,126,129,133,140,145,150,154,155,155,157,159,161,162,164,165,167,168,169,170,172,174,172,172,171,169,166,163,161,158,153,148,143,140,137,134,131,128,125,120,118,116,114,112,110,109,108,107,105],[111,113,115,117,116,115,116,117,117,119,121,124,126,128,132,137,143,151,156,161,161,162,163,165,166,167,168,170,171,173,175,177,179,178,177,176,176,174,171,169,165,161,156,152,148,144,140,138,135,131,127,123,119,117,115,113,111,110,108,106,105],[114,115,117,117,117,118,119,119,120,121,124,126,128,131,137,143,150,156,160,163,165,168,170,171,172,173,174,175,177,179,180,182,183,183,183,183,180,178,177,172,168,164,160,156,152,148,144,141,138,134,130,126,121,117,114,112,110,110,108,106,104],[116,118,118,118,120,121,121,122,122,123,125,128,130,134,141,147,152,156,160,165,168,170,174,176,179,180,181,181,182,182,183,184,186,187,187,184,184,181,180,176,172,168,165,161,157,153,149,145,142,138,133,129,125,120,115,111,110,110,108,106,104],[118,120,120,121,122,123,124,124,125,126,127,129,132,135,142,149,153,157,161,166,170,174,178,180,182,183,184,184,185,186,186,187,189,189,189,189,189,186,182,179,175,171,168,165,162,157,152,149,145,141,137,131,125,120,116,111,110,110,108,106,104],[120,121,122,123,124,125,126,127,127,128,130,132,134,137,142,151,155,158,162,169,172,176,181,183,184,186,187,188,189,189,189,189,190,190,191,190,190,188,186,183,180,175,171,168,165,161,157,152,149,145,141,134,127,121,116,112,110,110,108,106,104],[120,122,125,126,126,127,128,129,130,130,132,134,136,139,145,152,157,160,167,172,175,178,181,185,186,188,190,191,192,193,193,192,192,191,192,191,191,190,190,187,184,181,177,172,169,165,161,156,152,147,143,139,131,123,119,115,111,110,108,106,105],[121,124,126,128,129,129,130,131,132,133,135,137,139,143,150,154,159,164,170,173,176,179,184,186,189,190,191,192,193,194,195,194,193,192,191,191,191,191,190,190,188,184,181,177,173,169,165,160,155,149,145,142,136,129,123,118,114,110,108,108,107],[122,125,127,130,130,131,133,134,135,136,137,140,143,147,154,158,162,166,171,174,177,181,186,189,190,190,191,192,191,191,190,189,188,189,190,190,191,190,190,190,189,186,184,181,177,173,169,164,158,152,148,144,140,134,125,118,115,111,110,108,107],[122,125,128,130,132,133,135,136,137,139,140,143,147,152,157,161,164,168,172,175,179,182,186,190,190,190,190,189,187,184,184,183,182,182,183,183,183,184,185,186,187,186,185,184,181,177,173,169,163,157,149,145,141,136,130,119,116,112,110,108,106],[123,126,129,131,133,135,137,138,139,141,143,147,150,156,161,164,167,170,173,177,181,184,187,188,190,189,187,185,183,179,176,174,174,174,174,174,176,177,179,180,182,183,182,181,181,180,176,171,166,160,152,147,142,138,133,126,121,115,110,106,105],[124,127,130,132,135,137,138,140,142,144,147,149,154,157,161,165,168,171,175,178,181,184,186,187,187,184,184,181,179,175,171,169,168,168,168,169,170,172,174,177,178,179,180,181,181,180,179,174,167,161,155,148,144,139,134,128,121,115,110,106,105],[123,128,131,133,136,138,140,142,144,146,149,151,154,157,160,164,168,172,175,178,181,183,184,184,185,183,180,177,174,170,167,165,164,164,164,165,166,168,171,175,176,178,180,181,180,180,179,177,170,163,157,150,144,139,134,128,121,115,110,108,107],[123,127,131,134,136,138,140,142,144,147,149,151,154,157,160,164,168,171,174,178,180,181,181,182,183,181,178,173,169,166,163,161,161,160,160,161,163,165,168,173,176,178,179,180,181,180,180,175,173,166,159,152,145,139,134,127,121,115,110,109,108],[120,124,128,131,134,137,139,142,144,146,149,151,153,156,160,163,167,171,174,178,180,180,180,180,180,180,175,171,167,162,160,158,157,157,157,158,159,162,166,170,175,177,178,180,181,181,180,178,175,169,160,154,148,140,134,128,121,115,110,110,109],[118,121,125,129,132,134,137,140,142,145,147,149,151,155,159,163,166,169,173,177,179,180,180,180,180,179,174,169,166,161,158,156,154,153,153,154,156,159,163,169,173,175,178,180,181,180,180,179,175,170,160,154,149,142,135,128,122,116,111,110,110],[117,120,121,125,129,132,135,138,140,143,145,147,149,153,157,160,163,166,171,174,177,179,180,180,180,179,172,168,164,160,157,154,151,149,150,150,154,158,164,169,174,178,180,180,180,180,178,177,175,170,161,153,148,142,135,129,123,116,113,112,110],[115,118,120,122,126,130,133,136,138,141,143,145,148,151,154,157,160,163,168,171,174,177,179,179,179,176,171,167,164,160,156,153,149,148,149,151,155,158,163,170,173,177,179,180,180,180,178,175,173,171,162,154,147,141,136,130,124,117,115,112,110],[114,116,118,120,122,127,131,133,136,138,141,143,146,148,151,154,157,160,164,168,171,174,178,178,179,177,173,169,165,161,157,154,151,149,150,152,155,159,166,171,175,177,179,180,180,179,176,174,171,168,159,151,146,141,135,129,124,119,116,113,110],[115,114,116,118,120,122,127,129,132,136,139,141,143,146,148,151,153,156,160,164,167,172,174,176,177,176,173,170,166,162,159,157,154,153,154,155,158,161,169,172,174,176,178,178,178,178,175,172,169,162,156,149,144,140,134,128,123,118,115,112,110],[113,113,114,116,118,120,122,125,129,133,136,138,141,143,146,149,150,153,156,160,165,170,173,176,176,176,173,172,169,165,163,160,158,157,158,159,161,166,170,170,173,175,176,178,176,173,171,168,164,158,153,146,140,137,132,127,121,117,113,111,110],[111,112,113,114,116,118,120,122,126,130,133,136,139,142,145,147,148,151,155,158,163,168,173,176,177,177,176,174,171,169,166,164,161,161,162,164,165,167,170,170,171,173,173,173,170,168,165,163,160,155,149,143,138,134,130,125,119,116,112,110,109],[110,112,113,113,114,116,118,120,123,127,131,134,137,141,143,145,148,150,154,157,161,166,171,176,178,178,178,176,174,172,170,167,167,167,166,168,170,169,168,167,168,168,168,168,167,165,163,160,156,152,146,140,136,131,128,122,118,114,110,110,109],[109,110,111,112,114,116,118,119,120,124,128,131,136,140,142,145,147,150,153,157,160,165,170,174,178,179,179,178,178,176,174,171,170,170,170,168,167,166,164,163,161,162,163,163,163,161,160,157,153,148,142,136,130,127,124,120,117,113,110,110,109],[108,109,111,112,114,116,117,118,120,121,125,128,132,138,142,144,147,149,153,156,160,164,170,174,178,180,180,179,179,178,176,172,170,170,170,168,166,164,162,160,157,156,157,158,158,156,153,151,149,144,139,130,127,124,121,118,115,112,110,110,109],[108,109,111,113,114,116,117,118,119,120,122,126,130,135,139,143,147,149,152,156,160,164,169,173,177,180,180,180,180,179,178,174,170,170,168,167,165,163,161,157,154,153,152,152,152,149,148,147,144,140,134,128,125,122,119,117,114,110,110,109,109],[107,108,111,112,114,115,116,117,119,120,121,124,128,133,137,141,145,149,152,156,160,164,168,172,176,179,180,180,180,179,178,174,170,168,166,165,163,161,158,154,150,149,148,146,145,143,143,143,140,136,130,126,123,120,118,115,112,110,110,109,109],[107,108,110,112,113,113,115,116,118,120,122,125,128,132,136,140,145,148,150,155,160,164,167,170,174,177,179,179,178,176,176,173,169,166,164,163,161,159,155,152,148,145,143,141,140,139,139,138,136,132,128,124,121,118,116,114,111,110,110,109,108],[107,108,109,111,113,114,116,117,119,120,122,125,128,132,137,141,144,146,149,152,157,162,166,168,171,173,175,175,173,172,172,171,168,165,162,160,158,156,153,149,145,142,139,138,137,136,135,133,131,129,126,122,119,117,114,112,110,110,109,108,107],[108,109,110,112,114,115,116,117,119,120,122,126,129,133,137,141,143,146,148,151,155,160,164,167,168,169,170,170,169,168,167,168,166,163,160,158,155,153,150,147,143,140,137,136,134,133,132,130,129,127,125,121,118,115,112,110,110,110,108,107,107],[109,110,111,113,115,116,117,118,120,121,123,126,129,133,138,141,143,146,148,150,155,159,163,165,166,167,168,168,166,165,164,161,160,159,158,155,152,149,147,144,141,138,135,134,132,130,129,128,126,124,122,120,117,113,111,110,110,110,108,107,107],[110,111,112,113,116,117,118,119,120,122,125,127,130,133,138,141,143,146,148,150,154,159,162,163,164,166,166,166,165,163,161,159,157,156,155,153,150,146,143,140,138,136,133,132,130,129,128,125,124,122,120,119,117,114,111,110,110,109,108,107,107],[111,112,113,114,116,117,118,119,120,123,125,128,130,134,139,141,144,146,148,151,154,158,161,164,166,167,168,166,165,163,161,158,156,154,152,150,146,142,139,137,135,133,131,130,129,128,127,125,123,121,120,118,116,113,111,110,110,109,108,107,106],[111,112,113,115,117,118,118,120,121,124,126,128,131,135,139,142,144,146,148,151,155,160,164,165,168,169,169,168,166,163,160,158,156,153,151,148,145,142,139,137,135,132,130,129,127,126,125,124,123,120,120,117,116,114,112,110,110,108,107,106,106],[112,113,114,116,117,118,119,120,122,124,127,129,132,135,139,142,144,146,149,152,157,162,167,169,170,170,170,168,165,163,161,159,157,155,151,148,145,141,139,136,134,132,130,128,127,126,124,123,122,120,119,117,116,114,112,111,109,107,106,106,105],[113,114,115,116,117,119,119,120,122,125,127,129,132,135,139,142,144,147,149,154,159,164,169,170,170,170,170,170,168,165,163,161,158,155,151,148,145,142,139,137,135,132,131,128,126,125,124,122,121,120,119,117,115,113,111,110,109,106,105,105,104],[113,114,115,117,118,119,120,121,123,125,127,130,132,135,139,142,145,148,150,156,161,166,170,170,170,170,170,170,169,166,163,161,159,155,151,148,146,143,140,138,135,134,132,130,127,125,123,121,120,120,119,116,114,112,110,110,108,106,105,104,104],[114,115,116,117,118,119,120,121,123,126,128,130,133,136,139,142,145,148,152,157,161,166,168,170,170,170,170,168,166,164,163,160,159,155,151,148,146,143,141,138,136,134,132,130,128,125,123,121,120,120,118,116,113,111,110,110,109,106,105,104,104],[115,116,117,118,119,120,121,121,123,126,128,131,134,136,139,142,145,149,152,157,161,163,164,166,168,167,166,164,163,161,160,158,156,152,149,147,144,143,141,139,136,134,132,130,128,125,122,120,120,119,117,115,113,110,110,109,107,106,105,104,104],[115,116,117,118,119,120,121,122,123,125,128,131,134,137,139,142,145,149,152,156,159,159,160,162,162,161,161,160,159,158,157,155,153,150,148,146,145,143,142,140,137,134,131,129,126,124,122,120,119,117,115,113,111,110,109,109,107,106,105,104,104],[114,115,116,116,118,119,120,121,122,126,129,132,135,137,140,143,146,149,152,155,156,157,158,159,159,159,158,158,157,155,153,151,150,149,147,146,145,144,142,141,138,135,132,128,125,122,120,118,117,115,113,112,110,109,108,108,106,105,105,104,104],[113,114,115,116,117,118,119,120,123,126,129,132,135,138,140,143,146,148,151,153,154,156,157,157,157,157,156,155,154,152,150,149,148,147,146,145,144,142,141,140,139,136,132,129,125,121,118,116,115,113,111,110,109,108,108,107,106,105,104,104,104],[112,113,114,115,116,117,119,120,122,126,130,133,136,138,141,143,146,148,150,152,154,155,155,155,155,155,154,152,152,150,148,147,146,145,145,143,142,141,140,140,140,137,133,129,125,120,117,115,111,110,110,109,108,107,107,106,105,105,104,104,103],[111,112,114,115,116,117,118,120,122,125,131,134,137,139,142,144,146,148,150,152,153,153,153,153,153,153,153,151,149,147,146,144,144,143,143,142,141,140,140,140,140,138,134,130,123,120,118,111,110,110,110,108,107,106,108,105,105,104,104,103,103],[111,112,113,115,115,116,117,119,121,126,131,135,138,140,142,144,146,148,150,151,151,151,151,151,151,151,151,150,148,146,144,142,141,141,142,141,140,140,140,140,140,140,136,132,126,120,115,110,110,110,109,107,106,105,107,105,104,104,104,103,103],[112,113,113,114,115,116,117,119,122,127,132,135,139,141,143,145,147,149,150,150,150,150,150,150,150,150,150,149,147,144,142,141,140,140,140,140,140,140,140,140,140,140,137,133,128,120,117,110,110,110,108,106,105,105,106,105,104,104,103,103,103],[112,113,114,114,116,117,118,120,122,128,132,136,139,141,144,146,147,149,150,150,150,150,150,150,150,150,150,149,146,143,141,140,140,139,139,139,140,140,140,140,140,140,137,133,129,121,118,110,110,109,107,106,105,105,105,104,104,103,103,103,102],[112,114,114,115,116,117,119,120,122,128,133,136,140,142,144,146,148,150,150,150,150,150,150,150,150,150,150,148,145,142,140,138,138,138,137,138,140,140,140,140,140,140,137,134,130,122,118,110,110,108,106,105,103,104,104,104,104,103,103,102,102],[113,114,115,116,116,117,118,120,123,129,133,137,140,142,144,146,149,150,150,150,150,150,150,150,150,150,150,147,143,141,139,137,136,136,135,136,138,140,140,140,140,139,136,134,130,123,119,113,109,108,106,104,103,104,104,104,103,103,102,102,101],[114,115,115,116,117,118,118,120,123,129,133,137,140,143,145,147,150,150,150,150,150,150,150,150,150,150,148,145,142,139,138,136,135,134,134,134,136,138,137,138,139,137,134,132,125,122,117,114,109,107,105,103,102,104,104,103,103,102,102,101,101],[114,115,116,117,117,119,118,120,123,128,132,136,139,142,145,148,150,150,150,150,150,150,150,150,150,150,147,144,141,139,136,135,134,133,132,132,134,134,134,134,135,133,131,128,124,120,116,113,110,107,104,102,102,103,103,103,102,102,102,101,100],[115,116,116,117,118,119,119,120,124,128,132,136,139,142,145,148,150,150,150,150,150,150,150,150,150,149,146,143,140,138,135,134,133,131,131,131,131,131,131,131,130,127,124,122,119,117,115,112,109,106,104,101,102,103,103,102,102,102,101,100,100],[115,116,117,118,118,119,120,123,125,128,131,135,138,141,145,148,150,150,150,150,150,150,150,150,150,147,145,142,139,137,134,132,131,130,129,128,128,128,128,128,126,123,121,119,116,114,112,110,108,105,103,101,103,103,103,102,102,101,100,100,100],[116,117,118,118,119,120,122,123,125,128,131,134,137,141,145,148,149,150,150,150,150,150,150,150,148,145,143,141,138,135,133,130,129,128,127,126,125,125,125,124,123,120,118,116,114,111,109,107,106,104,102,100,101,101,102,102,101,100,100,100,100],[116,117,118,119,120,121,123,124,126,128,130,133,137,140,144,145,147,148,149,150,149,149,147,146,144,141,139,136,133,131,129,128,127,126,125,124,123,123,122,121,120,118,116,114,112,108,107,105,103,102,100,100,100,100,101,101,100,100,100,100,100],[117,118,119,119,120,121,123,124,126,128,129,131,135,139,142,143,145,146,147,147,147,146,144,142,140,138,135,133,130,128,127,126,125,124,123,122,121,120,119,118,117,115,114,112,110,106,105,102,101,100,100,100,100,100,100,100,100,99,99,99,99],[117,118,119,120,120,121,123,124,125,126,128,129,132,137,140,142,143,143,144,144,144,143,141,139,137,135,133,130,128,127,126,125,123,122,121,120,119,117,116,115,114,112,111,108,107,105,100,100,100,100,100,100,100,99,99,99,99,99,99,99,98],[116,117,118,120,120,121,122,123,124,125,126,128,130,134,139,140,141,141,141,141,141,140,138,136,134,133,131,129,127,125,124,123,122,120,119,118,117,116,114,112,111,108,109,106,106,100,100,100,100,100,99,99,99,99,99,99,99,98,98,98,97],[114,115,116,117,119,119,120,121,122,123,125,127,129,133,136,134,134,136,138,138,137,137,135,133,132,130,129,127,125,124,122,121,120,119,117,116,115,114,112,110,109,108,107,105,105,100,100,100,100,99,99,99,98,98,98,98,98,97,97,97,97],[112,113,114,115,116,116,117,119,120,122,124,126,127,129,129,128,127,129,132,133,133,133,133,131,129,127,126,125,124,122,121,119,118,117,116,114,113,112,110,109,108,106,106,105,100,100,100,98,98,98,98,98,98,97,97,97,97,97,97,97,96],[109,111,112,112,113,113,113,114,116,119,121,123,124,125,124,123,123,123,125,127,129,129,128,128,127,125,124,123,122,121,119,118,117,116,114,113,112,110,109,108,107,106,105,100,100,100,97,97,97,97,97,97,97,96,96,96,96,96,96,96,96],[106,107,108,108,109,110,110,112,113,114,117,119,120,121,119,117,117,117,118,120,123,124,125,125,125,123,121,120,120,119,118,117,116,115,114,113,111,109,109,107,106,105,100,100,100,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96],[104,105,105,106,106,107,108,108,109,109,111,115,116,114,113,112,111,110,111,113,116,119,122,122,122,121,120,119,118,118,117,116,115,114,113,112,111,108,108,106,105,100,100,100,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96],[102,103,103,104,104,105,106,106,107,108,109,111,112,110,109,108,108,108,108,109,110,112,116,117,117,118,118,118,117,116,116,115,114,113,112,111,110,107,107,105,100,100,100,97,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96],[101,102,103,103,104,105,105,106,106,107,108,109,109,107,106,106,105,105,105,106,107,108,109,110,111,113,114,115,115,115,114,113,112,111,110,108,108,106,105,100,100,100,97,97,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96],[100,101,102,102,103,103,104,104,105,106,106,107,106,106,106,105,105,104,103,103,104,105,107,108,110,111,111,112,112,113,113,112,111,110,108,107,106,105,100,100,100,98,97,97,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96],[100,101,101,102,102,103,103,104,104,105,105,105,105,106,105,105,104,103,102,101,102,103,104,106,107,110,111,111,111,112,112,112,110,107,107,106,105,102,100,100,99,98,97,97,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,95],[99,100,101,102,102,103,103,103,104,104,104,104,103,104,104,104,104,102,101,101,102,103,104,105,107,110,111,111,111,111,111,111,108,106,105,105,102,101,100,99,99,98,97,97,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,95,95],[99,100,100,101,101,102,102,102,103,103,103,103,102,103,103,104,103,102,101,101,101,102,103,104,106,109,110,111,111,111,110,110,107,105,103,104,100,100,99,99,98,98,97,97,96,96,96,96,96,96,96,96,96,96,95,95,95,95,95,95,95],[99,100,100,100,101,101,101,102,102,103,102,102,101,102,102,103,103,101,101,100,101,101,102,103,105,109,110,110,111,110,110,109,106,105,100,102,100,99,99,99,98,98,97,97,96,96,96,96,96,96,95,95,95,95,95,95,95,95,95,95,94],[99,99,99,99,100,100,101,101,102,102,101,101,101,101,101,102,102,101,100,100,101,101,101,103,104,107,109,109,110,110,109,108,105,102,100,100,99,99,99,98,98,98,97,96,96,96,96,96,95,95,95,95,95,95,95,94,94,94,94,94,94],[98,99,99,99,99,100,100,101,101,102,101,100,100,100,101,101,101,100,100,100,100,101,101,101,103,106,107,109,109,109,109,107,104,101,100,99,99,99,98,98,98,97,96,96,96,96,95,95,95,95,95,95,95,94,94,94,94,94,94,94,94],[98,98,98,99,99,99,100,100,101,101,100,100,99,99,100,100,100,100,100,100,100,101,101,101,102,105,106,109,108,109,107,105,102,100,100,99,99,98,98,98,97,96,96,96,96,95,95,95,95,95,95,94,94,94,94,94,94,94,94,94,94],[97,98,98,98,99,99,99,100,100,100,100,100,99,99,99,100,100,100,100,100,100,100,101,101,101,103,104,105,106,105,104,101,100,100,99,99,98,98,97,97,97,96,96,96,95,95,95,95,95,94,94,94,94,94,94,94,94,94,94,94,94],[97,97,97,98,98,99,99,99,100,100,100,99,99,99,99,99,100,100,100,100,100,100,101,101,100,100,100,100,100,100,100,100,100,100,99,99,98,97,97,97,96,96,96,95,95,95,95,94,94,94,94,94,94,94,94,94,94,94,94,94,94]],\"type\":\"surface\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-08-16T17:02:47-03:00",
    "input_file": "exemplo_de_post_poliglota.knit.md"
  },
  {
    "path": "posts/2021-05-12-regresso-logstica/",
    "title": "Regressão Logística na Prática",
    "description": "Exemplo e referências de Regressão Logística usando {tidymodels}.",
    "author": [
      {
        "name": "Athos Petri Damiani",
        "url": "https://github.com/athospd"
      }
    ],
    "date": "2021-05-18",
    "categories": [],
    "contents": "\n\nContents\nReferências\nConexão R e SQL\nExemplo de manipulação de dados\nExemplos de Criação de Features janeladas\nFluxo de Trabalho do Tidymodels\nPASSO 0) CARREGAR AS BASES\nPASSO 1) BASE TREINO/TESTE\nPASSO 2) EXPLORAR A BASE\nPASSO 3) DATAPREP\nPASSO 4) MODELO\nPASSO 5) TUNAGEM DE HIPERPARÂMETROS\nPASSO 6) DESEMPENHO DO MODELO FINAL\nVariáveis importantes\nMétricas de desempenho\nGráficos extras\n\nPASSO 7) MODELO FINAL\n\nEXEMPLO DE DASHBOARD (link)\n\nOs códigos deste tutorial estão aqui (link).\nReferências\nR for Data Science\nTidy Modeling With R\npacote {slider}\nFeature Engineering And Selection\nIntroduction To Statistical Learning\nMaterial do Curso de Machine Learning da Curso-R\n\n\n# pacotes ---------------\nlibrary(tidyverse)\n\n\n\nConexão R e SQL\n\n\n# Exemplo de conexão com um MariaDB (também conhecido como MySQL) remoto.\ncon_mariadb <- DBI::dbConnect(\n  RMariaDB::MariaDB(), \n  host = \"relational.fit.cvut.cz\", \n  port = 3306, \n  username = \"guest\", \n  password = \"relational\",\n  dbname = \"financial\"\n)\n\nDBI::dbListTables(con_mariadb)\n\n\n[1] \"account\"  \"card\"     \"client\"   \"disp\"     \"district\" \"loan\"    \n[7] \"order\"    \"trans\"   \n\n\n\n# Conexao com SQLite --------------------------------------------------------------\ncon <- DBI::dbConnect(RSQLite::SQLite(), \"dados/dados_consultoria.db\")\n\n# Acessando o SQL a partir do R ------------------------------------------------\n# computação é feita lá no servidor.\ntbl(con, \"indicadores\") %>%\n  count(id)\n\n\n# Source:   lazy query [?? x 2]\n# Database: sqlite 3.35.5\n#   [/media/athos/DATA/OneDrive/Documents/rascunhos/_posts/2021-05-12-regresso-logstica/dados/dados_consultoria.db]\n  id        n\n  <chr> <int>\n1 406      16\n2 420      18\n3 52       15\n4 60       19\n5 970      17\n6 972      18\n\n# dá pra consultar a query de SQL que rodou lá no servidor.\ntbl(con, \"indicadores\") %>%\n  count(id) %>%\n  show_query()\n\n\n<SQL>\nSELECT `id`, COUNT() AS `n`\nFROM `indicadores`\nGROUP BY `id`\n\n# passando do SQL pro R --------------------------------------------------------\n# collect() faz o download pro computado local (não estamos mais usando o servidor).\nindicadores <- tbl(con, \"indicadores\") %>% collect()\n\n# PS: o SQLite não tem formato de datas, então tem que transformar em data quando vem pro R. Esse problema não tem no MySQL ou no SQL Server.\nindicadores <- indicadores %>%\n  mutate(\n    data = as.Date(data)\n  )\n\n\n\nExemplo de manipulação de dados\nInformação 1 - Sobre os IDs, o cliente informou que deveria ter apenas uma linha para cada trinca (id-ano-mes). Por conta de uma inconsistência, poderia acontecer de virem duas ou mais linhas para o mesma trinca (id-ano-mes). O correto é ter apenas uma linha apenas. Eles disseram que a linha com o maior valor de agendamento tem mais chance de ser a correta.\n\n\n# Solução: arrange() + distinct()\nindicadores <- indicadores %>%\n  dplyr::arrange(desc(agendamento)) %>%\n  dplyr::distinct(id, ano, mes, .keep_all = TRUE)\n\n\n\nInformação 2 - Sobre as séries mensais, o cliente informou que:\nIDs podem ter início e fim distintos.\nA série de meses de um ID não teve ter mês faltante entre seu início e seu fim, porém, em virtude de problemas técnicos, pode haver perda de informação no meio do processo. Assim, nesses casos, orienta-se substituir o valor faltante pelo valor do mês anterior.\n\n\n# Olhando o problema dos meses faltantes\nindicadores %>%\n  ggplot(aes(x = data, y = id, colour = id)) +\n  geom_point(size = 5) \n\n\n\n# Solução: {padr} + {tidyr} (exemplo com o id 970)\nindicadores %>%\n  dplyr::filter(id == 970) %>%\n  dplyr::arrange(data) %>%\n  padr::pad(interval = \"month\", group = \"id\")\n\n\n# A tibble: 9 x 9\n  id    ano   mes   agendamento notificacao alocacao turnoextra cidade\n  <chr> <chr> <chr>       <dbl>       <dbl>    <dbl>      <dbl> <chr> \n1 970   2019  DEZ         0.133       0.056    0.032      0.032 Campo…\n2 970   2020  jan         0           0.06     0.064      0.064 Campo…\n3 970   2020  FEV         0.279       0.051    0          0     Campo…\n4 970   2020  MAR         0           0.061    0.064      0.064 Campo…\n5 970   2020  ABR         0.073       0.059    0.036      0.036 Campo…\n6 970   <NA>  <NA>       NA          NA       NA         NA     <NA>  \n7 970   2020  JUN         0           0.063    0.07       0.07  Campo…\n8 970   2020  JUL         0           0.054    0.217      0.217 Campo…\n9 970   2020  AGO         0           0.059    0.067      0.067 Campo…\n# … with 1 more variable: data <date>\n\nindicadores_com_pad <- indicadores  %>%\n  padr::pad(interval = \"month\", group = \"id\")  \n\n# padr::pad() consertou\nindicadores_com_pad %>%\n  ggplot(aes(x = data, y = id, colour = id)) +\n  geom_point(size = 5) \n\n\n\n# agora tem que preencher os NAs com fill.\nindicadores_com_pad <- indicadores_com_pad %>%\n  dplyr::arrange(id, data) %>%\n  tidyr::fill(agendamento:cidade) %>%\n  dplyr::mutate(\n    # mes e ano não dá pra preencher com fill diretamente\n    mes = as.character(lubridate::month(data)),\n    ano = as.character(lubridate::year(data))\n  )\n\n\n\nExemplos de Criação de Features janeladas\n\n\n # features no tempo (exemplo) ---------------------\nteste <- indicadores_com_pad %>% \n  filter(id %in% c(406, 420), data %>% between(as.Date(\"2019-01-01\"), as.Date(\"2019-04-01\"))) %>%\n  select(id, data)\n\n# transformacoes\nteste %>%\n  arrange(id, data) %>%\n  group_by(id) %>%\n  mutate(\n    x = 1:n(),\n    a = cumsum(x),\n    b = lag(x),\n    c = lag(x, n = 2),\n    d = lead(x),\n    e = slider::slide_dbl(x, mean, .before = 1, .after = 0),\n    f = slider::slide_dbl(x, mean, .before = 0, .after = 0),\n    h = x/lag(x)\n  )\n\n\n# A tibble: 7 x 10\n# Groups:   id [2]\n  id    data           x     a     b     c     d     e     f     h\n  <chr> <date>     <int> <int> <int> <int> <int> <dbl> <dbl> <dbl>\n1 406   2019-02-01     1     1    NA    NA     2   1       1 NA   \n2 406   2019-03-01     2     3     1    NA     3   1.5     2  2   \n3 406   2019-04-01     3     6     2     1    NA   2.5     3  1.5 \n4 420   2019-01-01     1     1    NA    NA     2   1       1 NA   \n5 420   2019-02-01     2     3     1    NA     3   1.5     2  2   \n6 420   2019-03-01     3     6     2     1     4   2.5     3  1.5 \n7 420   2019-04-01     4    10     3     2    NA   3.5     4  1.33\n\nFluxo de Trabalho do Tidymodels\n\n\n# Pacotes ------------------------------------------------------------------\nlibrary(tidymodels)\nlibrary(ISLR)\nlibrary(tidyverse)\nlibrary(modeldata)\nlibrary(pROC)\nlibrary(vip)\nlibrary(padr)\n\n\n\nPASSO 0) CARREGAR AS BASES\n\n\ndata(\"credit_data\")\nhelp(credit_data)\ncredit_data <- credit_data %>% na.omit()\nglimpse(credit_data) # German Risk\n\n\nRows: 4,039\nColumns: 14\n$ Status    <fct> good, good, bad, good, good, good, good, good, goo…\n$ Seniority <int> 9, 17, 10, 0, 0, 1, 29, 9, 0, 0, 6, 7, 8, 19, 0, 0…\n$ Home      <fct> rent, rent, owner, rent, rent, owner, owner, paren…\n$ Time      <int> 60, 60, 36, 60, 36, 60, 60, 12, 60, 48, 48, 36, 60…\n$ Age       <int> 30, 58, 46, 24, 26, 36, 44, 27, 32, 41, 34, 29, 30…\n$ Marital   <fct> married, widow, married, single, single, married, …\n$ Records   <fct> no, no, yes, no, no, no, no, no, no, no, no, no, n…\n$ Job       <fct> freelance, fixed, freelance, fixed, fixed, fixed, …\n$ Expenses  <int> 73, 48, 90, 63, 46, 75, 75, 35, 90, 90, 60, 60, 75…\n$ Income    <int> 129, 131, 200, 182, 107, 214, 125, 80, 107, 80, 12…\n$ Assets    <int> 0, 0, 3000, 2500, 0, 3500, 10000, 0, 15000, 0, 400…\n$ Debt      <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2500, 260, 0, …\n$ Amount    <int> 800, 1000, 2000, 900, 310, 650, 1600, 200, 1200, 1…\n$ Price     <int> 846, 1658, 2985, 1325, 910, 1645, 1800, 1093, 1957…\n\ncredit_data %>% count(Status)\n\n\n  Status    n\n1    bad 1026\n2   good 3013\n\nPASSO 1) BASE TREINO/TESTE\n\n\nset.seed(1)\ncredit_initial_split <- initial_split(credit_data, strata = \"Status\", prop = 0.75)\n\ncredit_train <- training(credit_initial_split)\ncredit_test  <- testing(credit_initial_split)\n\n\n\nPASSO 2) EXPLORAR A BASE\n\n\nskimr::skim(credit_train)\n\n\nTable 1: Data summary\nName\ncredit_train\nNumber of rows\n3030\nNumber of columns\n14\n_______________________\n\nColumn type frequency:\n\nfactor\n5\nnumeric\n9\n________________________\n\nGroup variables\nNone\nVariable type: factor\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\nStatus\n0\n1\nFALSE\n2\ngoo: 2260, bad: 770\nHome\n0\n1\nFALSE\n6\nown: 1452, ren: 643, par: 564, oth: 194\nMarital\n0\n1\nFALSE\n5\nmar: 2188, sin: 674, sep: 89, wid: 54\nRecords\n0\n1\nFALSE\n2\nno: 2537, yes: 493\nJob\n0\n1\nFALSE\n4\nfix: 2066, fre: 524, par: 328, oth: 112\nVariable type: numeric\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\nSeniority\n0\n1\n8.09\n8.15\n0\n2.00\n5.0\n12.00\n45\n▇▃▁▁▁\nTime\n0\n1\n46.68\n14.67\n6\n36.00\n48.0\n60.00\n72\n▁▂▃▃▇\nAge\n0\n1\n36.97\n11.00\n18\n28.00\n35.0\n45.00\n66\n▆▇▅▃▁\nExpenses\n0\n1\n55.54\n19.43\n35\n35.00\n49.5\n73.00\n173\n▇▃▁▁▁\nIncome\n0\n1\n140.45\n78.38\n8\n90.00\n125.0\n170.00\n959\n▇▂▁▁▁\nAssets\n0\n1\n5035.21\n9286.32\n0\n0.00\n3000.0\n6000.00\n200000\n▇▁▁▁▁\nDebt\n0\n1\n328.00\n1073.26\n0\n0.00\n0.0\n0.00\n21400\n▇▁▁▁▁\nAmount\n0\n1\n1025.78\n456.44\n100\n700.00\n1000.0\n1300.00\n4000\n▅▇▁▁▁\nPrice\n0\n1\n1443.13\n594.70\n105\n1111.25\n1400.0\n1672.75\n11140\n▇▁▁▁▁\n\nvisdat::vis_miss(credit_train)\n\n\n\ncredit_train %>% \n  select(where(is.numeric)) %>% \n  cor() %>% \n  corrplot::corrplot() \n\n\n\ncredit_train %>% \n  select(c(where(is.factor), Status)) %>%\n  pivot_longer(-Status, names_to = \"variavel\", values_to = \"valor\") %>%\n  count(Status, variavel, valor) %>%\n  ggplot(aes(y = valor, x = n, fill = Status)) +\n  geom_col(position = \"fill\") +\n  facet_wrap(~variavel, scales = \"free_y\") +\n  ggtitle(\"Status vs. Variáveis Categóricas\")\n\n\n\ncredit_train %>% \n  select(c(where(is.numeric), Status)) %>%\n  pivot_longer(-Status, names_to = \"variavel\", values_to = \"valor\") %>%\n  ggplot(aes(y = Status, x = valor, fill = Status)) +\n  geom_boxplot() +\n  facet_wrap(~variavel, scales = \"free_x\") +\n  ggtitle(\"Status vs. Variáveis Numéricas\")\n\n\n\ncredit_train %>% \n  select(c(where(is.numeric), Status)) %>%\n  pivot_longer(-Status, names_to = \"variavel\", values_to = \"valor\") %>%\n  ggplot(aes(y = Status, x = valor, fill = Status)) +\n  geom_boxplot() +\n  facet_wrap(~variavel, scales = \"free_x\") +\n  scale_x_log10() +\n  ggtitle(\"Status vs. Variáveis Numéricas NA ESCALA LOG\")\n\n\n\n\nPASSO 3) DATAPREP\n\n\ncredit_recipe <- recipe(Status ~ ., data = credit_train) %>%\n  step_normalize(all_numeric()) %>%\n  step_impute_linear(Income, Assets, Debt, impute_with = imp_vars(Expenses)) %>%\n  step_impute_mode(Home) %>%\n  step_dummy(all_nominal(), -all_outcomes()) %>%\n  step_zv(all_predictors()) \n\n# olhando a base preparada\nbake(prep(credit_recipe), new_data = NULL)\n\n\n# A tibble: 3,030 x 23\n   Seniority    Time     Age Expenses Income Assets   Debt  Amount\n       <dbl>   <dbl>   <dbl>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl>\n 1     0.112  0.908  -0.634     0.899 -0.146 -0.542 -0.306 -0.495 \n 2     1.09   0.908   1.91     -0.388 -0.121 -0.542 -0.306 -0.0565\n 3    -0.993  0.908  -1.18      0.384  0.530 -0.273 -0.306 -0.276 \n 4    -0.993 -0.728  -0.998    -0.491 -0.427 -0.542 -0.306 -1.57  \n 5    -0.870  0.908  -0.0883    1.00   0.938 -0.165 -0.306 -0.823 \n 6     2.57   0.908   0.639     1.00  -0.197  0.535 -0.306  1.26  \n 7     0.112 -2.36   -0.907    -1.06  -0.771 -0.542 -0.306 -1.81  \n 8    -0.993  0.908  -0.452     1.77  -0.427  1.07  -0.306  0.382 \n 9    -0.993  0.0900  0.366     1.77  -0.771 -0.542 -0.306  0.382 \n10    -0.256  0.0900 -0.270     0.230 -0.197 -0.111 -0.306  0.272 \n# … with 3,020 more rows, and 15 more variables: Price <dbl>,\n#   Status <fct>, Home_other <dbl>, Home_owner <dbl>,\n#   Home_parents <dbl>, Home_priv <dbl>, Home_rent <dbl>,\n#   Marital_married <dbl>, Marital_separated <dbl>,\n#   Marital_single <dbl>, Marital_widow <dbl>, Records_yes <dbl>,\n#   Job_freelance <dbl>, Job_others <dbl>, Job_partime <dbl>\n\nvisdat::vis_miss(bake(prep(credit_recipe), new_data = NULL))\n\n\n\n\nPASSO 4) MODELO\n\n\n# Definição de \n# a) a f(x): logistc_reg()\n# b) modo (natureza da var resp): classification\n# c) hiperparametros que queremos tunar: penalty = tune()\n# d) hiperparametros que não queremos tunar: mixture = 1 # LASSO\n# e) o motor que queremos usar: glmnet\ncredit_lr_model <- logistic_reg(penalty = tune(), mixture = 1) %>%\n  set_mode(\"classification\") %>%\n  set_engine(\"glmnet\")\n\n# workflow\ncredit_wf <- workflow() %>% add_model(credit_lr_model) %>% add_recipe(credit_recipe)\n\n\n\nPASSO 5) TUNAGEM DE HIPERPARÂMETROS\n\n\n# a) bases de reamostragem para validação: vfold_cv()\n# b) (opcional) grade de parâmetros: parameters() %>% update() %>% grid_regular()\n# c) tune_grid(y ~ x + ...)\n# d) escolha das métricas (rmse, roc_auc, etc)\n# d) collect_metrics() ou autoplot() para ver o resultado\ncredit_resamples <- vfold_cv(credit_train, v = 5)\n\ncredit_lr_tune_grid <- tune_grid(\n  credit_wf,\n  resamples = credit_resamples,\n  metrics = metric_set(\n    accuracy, \n    roc_auc\n    # kap, # KAPPA \n    # precision, \n    # recall, \n    # f_meas, \n    # mn_log_loss #binary cross entropy\n  )\n)\n\n\nautoplot(credit_lr_tune_grid)\n\n\n\n# minha versão do autoplot()\ncollect_metrics(credit_lr_tune_grid)\n\n\n# A tibble: 20 x 7\n    penalty .metric  .estimator  mean     n std_err .config           \n      <dbl> <chr>    <chr>      <dbl> <int>   <dbl> <chr>             \n 1 1.92e-10 accuracy binary     0.804     5 0.00503 Preprocessor1_Mod…\n 2 1.92e-10 roc_auc  binary     0.832     5 0.00546 Preprocessor1_Mod…\n 3 2.35e- 9 accuracy binary     0.804     5 0.00503 Preprocessor1_Mod…\n 4 2.35e- 9 roc_auc  binary     0.832     5 0.00546 Preprocessor1_Mod…\n 5 1.07e- 8 accuracy binary     0.804     5 0.00503 Preprocessor1_Mod…\n 6 1.07e- 8 roc_auc  binary     0.832     5 0.00546 Preprocessor1_Mod…\n 7 4.96e- 7 accuracy binary     0.804     5 0.00503 Preprocessor1_Mod…\n 8 4.96e- 7 roc_auc  binary     0.832     5 0.00546 Preprocessor1_Mod…\n 9 1.95e- 6 accuracy binary     0.804     5 0.00503 Preprocessor1_Mod…\n10 1.95e- 6 roc_auc  binary     0.832     5 0.00546 Preprocessor1_Mod…\n11 2.12e- 5 accuracy binary     0.804     5 0.00503 Preprocessor1_Mod…\n12 2.12e- 5 roc_auc  binary     0.832     5 0.00546 Preprocessor1_Mod…\n13 2.61e- 4 accuracy binary     0.803     5 0.00504 Preprocessor1_Mod…\n14 2.61e- 4 roc_auc  binary     0.832     5 0.00537 Preprocessor1_Mod…\n15 6.39e- 3 accuracy binary     0.803     5 0.00502 Preprocessor1_Mod…\n16 6.39e- 3 roc_auc  binary     0.829     5 0.00513 Preprocessor1_Mod…\n17 4.35e- 2 accuracy binary     0.767     5 0.00369 Preprocessor1_Mod…\n18 4.35e- 2 roc_auc  binary     0.799     5 0.00727 Preprocessor1_Mod…\n19 2.82e- 1 accuracy binary     0.746     5 0.00517 Preprocessor1_Mod…\n20 2.82e- 1 roc_auc  binary     0.5       5 0       Preprocessor1_Mod…\n\ncollect_metrics(credit_lr_tune_grid) %>%\n  ggplot(aes(x = penalty, y = mean)) +\n  geom_point() +\n  geom_errorbar(aes(ymin = mean - std_err, ymax = mean + std_err)) +\n  facet_wrap(~.metric, scales = \"free\") +\n  scale_x_log10()\n\n\n\n\nPASSO 6) DESEMPENHO DO MODELO FINAL\n\n\n# a) extrai melhor modelo com select_best()\n# b) finaliza o modelo inicial com finalize_model()\n# c) ajusta o modelo final com todos os dados de treino (bases de validação já era)\ncredit_lr_best_params <- select_best(credit_lr_tune_grid, \"roc_auc\")\ncredit_lr_model <- credit_lr_model %>% finalize_model(credit_lr_best_params)\n\ncredit_lr_last_fit <- last_fit(\n  credit_lr_model,\n  Status ~ .,\n  credit_initial_split\n)\n\n\n\nVariáveis importantes\n\n\ncredit_lr_last_fit_model <- credit_lr_last_fit$.workflow[[1]]$fit$fit\nvip(credit_lr_last_fit_model)\n\n\n\n\nMétricas de desempenho\n\n\ncollect_metrics(credit_lr_last_fit)\n\n\n# A tibble: 2 x 4\n  .metric  .estimator .estimate .config             \n  <chr>    <chr>          <dbl> <chr>               \n1 accuracy binary         0.809 Preprocessor1_Model1\n2 roc_auc  binary         0.827 Preprocessor1_Model1\n\ncredit_test_preds <- collect_predictions(credit_lr_last_fit)\n\n# roc\ncredit_roc_curve <- credit_test_preds %>% roc_curve(Status, .pred_bad)\nautoplot(credit_roc_curve)\n\n\n\n# confusion matrix\ncredit_test_preds %>%\n  mutate(\n    Status_class = factor(if_else(.pred_bad > 0.6, \"bad\", \"good\"))\n  ) %>%\n  conf_mat(Status, Status_class)\n\n\n          Truth\nPrediction bad good\n      bad   83   30\n      good 173  723\n\noptions(scipen = 999)\ncredit_lr_last_fit$.workflow[[1]] %>%\n  pull_workflow_fit() %>% \n  tidy() %>%\n  select()\n\n\n# A tibble: 23 x 0\n\nGráficos extras\n\n\n# risco por faixa de score\ncredit_test_preds %>%\n  mutate(\n    score =  factor(ntile(.pred_bad, 10))\n  ) %>%\n  count(score, Status) %>%\n  ggplot(aes(x = score, y = n, fill = Status)) +\n  geom_col(position = \"fill\") +\n  geom_label(aes(label = n), position = \"fill\") +\n  coord_flip()\n\n\n\n# gráfico sobre os da classe \"bad\"\npercentis = 20\ncredit_test_preds %>%\n  mutate(\n    score = factor(ntile(.pred_bad, percentis))\n  ) %>%\n  filter(Status == \"bad\") %>%\n  group_by(score) %>%\n  summarise(\n    n = n(),\n    media = mean(.pred_bad)\n  ) %>%\n  mutate(p = n/sum(n)) %>%\n  ggplot(aes(x = p, y = score)) +\n  geom_col() +\n  geom_label(aes(label = scales::percent(p))) +\n  geom_vline(xintercept = 1/percentis, colour = \"red\", linetype = \"dashed\", size = 1)\n\n\n\n\nPASSO 7) MODELO FINAL\n\n\ncredit_final_lr_model <- credit_lr_model %>% fit(Status ~ ., credit_data)\n\n# salva tudo no computador\nwrite_rds(credit_lr_model, \"credit_lr_model.rds\")\nwrite_rds(credit_final_lr_model, \"credit_final_lr_model.rds\")\nwrite_rds(credit_lr_last_fit, \"credit_lr_last_fit.rds\")\n\n\n\nEXEMPLO DE DASHBOARD (link)\n\n\n\n",
    "preview": "posts/2021-05-12-regresso-logstica/regresso-logstica_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2021-05-18T12:28:29-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-08-15-receita_distill_ghpages/",
    "title": "Receita para fazer um Blog com Distill no Github Pages",
    "description": "Passo a passo de como subir um blog distill no Github Pages.",
    "author": [
      {
        "name": "Athos Damiani",
        "url": "https://github.com/athospd"
      }
    ],
    "date": "2021-03-22",
    "categories": [],
    "contents": "\r\nRequerimento\r\nO seguinte passo a passo supõe conhecimento prévio de git e github com RStudio. A seção de Git/Github do livro Zen do R é uma ótima referência para aprender a usar o git e github no R.\r\nCriar o blog: passo-a-Passo\r\nEsse passo-a-passo é baseado no doc do distill da RStudio.\r\nRode install.packages(c(\"usethis\", \"distill\")) para instalar os pacotes {usethis} e {distill}.\r\nRode usethis::create_package(\"blogDoAthos\") para criar novo projeto do RStudio.\r\nRode usethis::use_git() para iniciar o git no seu projeto.\r\nRode usethis::use_github(protocol = \"ssh\" para criar um repositório no seu github.\r\nVá ao repositório do seu github, clique em settings e desça até achar a configuração do Github Pages. Escolha\r\n\r\n\r\n\r\nFigure 1: ghpages\r\n\r\n\r\n\r\nRode file.create(\".nojekyll\") só pra evitar uns problemas com o ghpages.\r\nRode distill::create_blog(\".\", \"Blog do Athos\") para criar seu blog.\r\nCommitar e pushar para o github.\r\nIr para o link que o Github Pages mostrou na hora da configuração.\r\n\r\n\r\n\r\nFigure 2: ghpages\r\n\r\n\r\n\r\nCriar um post: passo-a-passo\r\nRode distill::create_post(\"Título do Meu Primeiro Post\") para criar um Rmd novo.\r\nCom o Rmd do seu post aberto na sua frente, pressione CTRL+SHIF+K para renderizar (e gerar o HTML).\r\nCommitar e pushar para o github para publicar o seu post no ar.\r\nEditar o seu Rmd e depois repetir os itens 2 e 3 para subir a versão editada/atualizada do seu post.\r\nExemplos de distill de R para se inspirar e explorar o github\r\nTrabalhos de Regressão Linear com R da Curso-R\r\nBlog da ABJ\r\nSite do próprio Distill para R Markdown\r\nRStudio AI Blog\r\nCiência de Dados com R e PostgreSQL do JJ - José Jesus do R\r\nBlog da Beatriz Milz\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-08-15-receita_distill_ghpages/githubpageslink.png",
    "last_modified": "2021-08-16T17:07:10-03:00",
    "input_file": "2021-08-15-receita_distill_ghpages.knit.md"
  }
]
